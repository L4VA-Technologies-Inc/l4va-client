name: Deploy l4va-client

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          # Create app directory
          ssh -i ~/.ssh/deploy_key ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} 'mkdir -p ~/apps/l4va-client'
          
          # Copy configurations and build files
          scp -i ~/.ssh/deploy_key Dockerfile ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/apps/l4va-client/
          scp -i ~/.ssh/deploy_key nginx.conf ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/apps/l4va-client/
          ssh -i ~/.ssh/deploy_key ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} 'mkdir -p ~/apps/l4va-client/dist'
          scp -i ~/.ssh/deploy_key -r dist/* ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/apps/l4va-client/dist/
          
          # Deploy Docker container
          ssh -i ~/.ssh/deploy_key ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} '
            cd ~/apps/l4va-client && \
            docker stop l4va-client || true && \
            docker rm l4va-client || true && \
            docker rmi l4va-client || true && \
            docker build -t l4va-client . && \
            docker run -d --name l4va-client -p 80:80 --restart unless-stopped l4va-client
          '
